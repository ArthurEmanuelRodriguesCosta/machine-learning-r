install.packages("recommenderlab")
library("recommenderlab")
library("recommenderlab")
data(Jester5k)
a <- as.data.frame(Jester5k)
library(recommenderlab)
data.wide <- read.csv("data.csv")
getwd()
setwd("/home/arthurerc/Documentos/ad2/lab4")
data.wide <- read.csv("data.csv")
data.long <- rad.csv("data2.csv")
data.long <- read.csv("data2.csv")
View(data.long)
View(data.wide)
t <- data.long %>% group_by(MAT_NOVA_MATRICULA) %>% summarise(mini = min(periodo_relativo), maxi = max(periodo_relativo))
library(dplyr)
t <- data.long %>% group_by(MAT_NOVA_MATRICULA) %>% summarise(mini = min(periodo_relativo), maxi = max(periodo_relativo))
View(t)
data.wide <- data.wide %>% select(-MAT_NOVA_MATRICULA)
?`Recommender-class`
data.wide <- data.wide %>% select(-MAT_NOVA_MATRICULA, -ALU_ANO_INGRESSO, -ALU_PERIODO_INGRESSO)
data.wide <- read.csv("data.csv")
data.wide <- data.wide %>% select(-MAT_NOVA_MATRICULA, -ALU_ANO_INGRESSO, -ALU_PERIODO_INGRESSO)
d <- as.matrix(data.wide)
r <- as(d, "realRatingMatrix")
r
rec=Recommender(r[1:nrow(r)],method="UBCF", param=list(normalize = "Z-score",method="Cosine",nn=5, minRating=1))
rec
print(rec)
names(getModel(rec))
getModel(rec)$nn
recom <- predict(rec, r[1:nrow(r)], type="ratings")
recom
recom
?calcPredictionAccuracy
data.wide <- read.csv("data.csv")
teste <- data.wide %>% filter(-ALU_ANO_INGRESSO < 2013, -ALU_PERIODO_INGRESSO = 2)
teste <- data.wide %>% filter(-ALU_ANO_INGRESSO < 2013, -ALU_PERIODO_INGRESSO == 2)
teste <- data.wide %>% filter(ALU_ANO_INGRESSO > 2013 | (ALU_ANO_INGRESSO == 2013 & ALU_PERIODO_INGRESSO == 2))
treino <- data.wide %>% filter(ALU_ANO_INGRESSO < 2013 | (ALU_ANO_INGRESSO == 2013 & ALU_PERIODO_INGRESSO == 1))
View(treino)
treino <- treino %>% select(-MAT_NOVA_MATRICULA, -ALU_ANO_INGRESSO, -ALU_PERIODO_INGRESSO)
teste <- teste %>% select(-MAT_NOVA_MATRICULA, -ALU_ANO_INGRESSO, -ALU_PERIODO_INGRESSO)
treino <- as.matrix(treino)
teste <- as.matrix(teste)
p.treino <- as(treino, "realRatingMatrix")
p.teste <- as(teste, "realRatingMatrix")
rec=Recommender(p.treino,method="UBCF", param=list(normalize = "Z-score",method="Cosine",nn=5, minRating=1))
rec
print(rec)
names(getModel(rec))
getModel(rec)$nn
recom <- predict(rec, p.teste, type="ratings")
recom
